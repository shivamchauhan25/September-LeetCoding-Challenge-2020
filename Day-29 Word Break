Word Break
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".
Example 2:

Input: s = "applepenapple", wordDict = ["apple", "pen"]
Output: true
Explanation: Return true because "applepenapple" can be segmented as "apple pen apple".
             Note that you are allowed to reuse a dictionary word.
Example 3:

Input: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
Output: false

Solution:
Python:

class Solution:
    def __init__(self):
        self.can_be={"":True}
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        
        if s in self.can_be:
            return self.can_be[s]
        
        result=False
        
        for w in wordDict:
            if len(s)>=len(w) and s[:len(w)]==w:
                if self.wordBreak(s[len(w):],wordDict):
                    self.can_be[s]=True
                    return True
                else:
                    self.can_be[s]=False
                    
        return False
