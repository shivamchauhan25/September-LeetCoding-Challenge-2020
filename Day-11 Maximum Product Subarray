Maximum Product Subarray

Problem:- 
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

Solution:

C++:- 
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int n=nums.size();
            if(n==0)
                return 0;
        int R=nums[0];
        
        
        int maxval=R, minval=R;
        for(int i=1;i<n;i++){
            if(nums[i]<0) std::swap(maxval,minval);
            
            maxval=std::max(nums[i],maxval*nums[i]);
            minval=std::min(nums[i],minval*nums[i]);
            
            R=max(R,maxval);
        }
        return R;
        
    }
};
