Maximum XOR of Two Numbers in an Array


Given a non-empty array of numbers, a0, a1, a2, … , an-1, where 0 ≤ ai < 231.

Find the maximum result of ai XOR aj, where 0 ≤ i, j < n.

Could you do this in O(n) runtime?

Example:

Input: [3, 10, 5, 25, 2, 8]

Output: 28

Explanation: The maximum result is 5 ^ 25 = 28.



Solution:
Python:

class Solution:
    def findMaximumXOR(self, nums: List[int]) -> int:
        ans =0
        for i in range(32)[::-1]:
            ans<<=1
            prefix={num>>i for num in nums}
            ans+=any(ans^1^p in prefix for p in prefix)
        return ans
